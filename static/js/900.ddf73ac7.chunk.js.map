{"version":3,"file":"static/js/900.ddf73ac7.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.13\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.13\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.13 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType","createProjectionNode","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","updateFeatures","render","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","postRender","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}